(()=>{"use strict";class e{constructor(e=null,t=null){this.value=e,this.next=t}}document.querySelector("body").style.backgroundColor="black";const t=new class{constructor(e=null){this.head=e}Append(t){if(null==this.head)this.Prepend(t);else{let n=this.head;for(;null!=n.next;)n=n.next;n.next=new e(t)}}Prepend(t){if(!this.head)return this.head=new e(t),this;let n=this.head;this.head=new e(t,n)}Size(){let e=0,t=this.head;for(;t;)e++,t=t.next;return e}Head(){return this.head}Tail(){if(!this.head)return null;let e=this.head;for(;null!=e.next;)e=e.next;return e}At(e){let t=this.head;for(let n=0;n<e;n++)if(t=t.next,!t)return"There is no data at index "+e+".";return t}Pop(){if(!this.head)return null;if(!this.head.next)return;let e=this.head,t=null,n=0;for(;e.next;)t=e,e=e.next,n++;t.next=null,console.log(`Removed value ${e.value} at index ${n} from linked list.`)}Contains(e){if(!e)return;let t=this.head;for(;t;){if(t.value===e)return!0;t=t.next}return!1}Find(e){let t=this.head,n=0;for(;t;){if(t.value===e)return n;t=t.next,n++}}ToString(){let e=this.head,t="";for(;e;)t+=`(${e.value}) -> `,e=e.next;return t+"null"}};t.Append("2"),t.Prepend("1"),t.Append("3"),t.Append("4"),console.log(t.ToString()),console.log(t.Size()),console.log(t.Head()),console.log(t.Tail()),console.log(t.At(2)),console.log(t.At(3)),t.Pop(),console.log(t.At(3)),console.log(t.ToString()),console.log(t.Contains("3")),console.log(t.Contains("This will be false")),console.log("Index: "+t.Find("2"))})();